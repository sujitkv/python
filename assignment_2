{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e2b755f3-cb1c-4d44-aca6-cb7d2db62397",
   "metadata": {},
   "source": [
    "1. what are the two values of the boolean data type? how do you write them?\r\n",
    "\r\n",
    "Ans. There are two values in boolean data type that is True and False. \r\n",
    "     for example value = True, a=10 and b=15 10=15 output:False\r\n",
    "     \r\n",
    "2. what are the three different types of Boolean operators?\r\n",
    "\r\n",
    "Ans. NOT (! or not): this is the unary operator, will print the opposite of the exact output \r\n",
    "     that will come to \"NOT\". for example:\r\n",
    "     a=10\r\n",
    "     b=20\r\n",
    "     c= not(a==b) \r\n",
    "     print(c) #O:True\r\n",
    "     |\r\n",
    "     AND(&&, and): this is a binary operator, will print true if only both the conditions are      true otherwise it will print false.\r\n",
    "     for ex:a=10\r\n",
    "            b=10\r\n",
    "            (a==b) and a>b #O: False\r\n",
    "     OR(|| or or): this is also a binary operator , will print true if either one of the            conditions is true out of two and print false if both the conditions fail.\r\n",
    "     for ex:a=10\r\n",
    "            b=10\r\n",
    "            (a==b) or a>b #O: True\r\n",
    "            \r\n",
    "3. make a list of each boolean operator's truth tables (i.e. every possible combination of boolean values for the operator and it evaluate.\r\n",
    "\r\n",
    "Ans. \r\n",
    "     Input 1\tInput 2\t   NOT Input 1\t   Input 1 AND Input 2\t Input 1 OR Input 2\r\n",
    "     True\t    True\t     False\t          True\t                True\r\n",
    "     True\t    False\t     False\t          False\t                True\r\n",
    "     False\t    True\t     True\t          False\t                True\r\n",
    "     False\t    False\t     True\t          False\t                False\r\n",
    "     \r\n",
    "4. What are the values of the following expressions?\r\n",
    "\r\n",
    "Ans. (5>4) and (3==5) = False\r\n",
    "     not(5>4)= False\r\n",
    "     (5>4) or (3==5)= True\r\n",
    "     not((5>4) or (3==5))= False\r\n",
    "     (True and True) and (True==False)= False\r\n",
    "     (not False) or (not True)= True\r\n",
    "     \r\n",
    "5. What are the six comparison operators?\r\n",
    "\r\n",
    "Ans. The six common comparison operator are: - \r\n",
    "\r\n",
    "Equal to (==): Checks if two values are equal.\r\n",
    "Not equal to (!=): Checks if two values are not equal.\r\n",
    "Greater than (>): Checks if the left operand is greater than the right operand.\r\n",
    "Less than (<): Checks if the left operand is less than the right operand.\r\n",
    "Greater than or equal to (>=): Checks if the left operand is greater than or equal to the right operand.\r\n",
    "Less than or equal to (<=): Checks if the left operand is less than or equal to the right operand.\r\n",
    "     \r\n",
    "6. How do you tell the difference between the equal to and assignment operators? Describe a condition and when you would you use one.\r\n",
    "     \r\n",
    "Ans. Assignment operator is used for assigning the value to a variable, that helps to store the value in the memory address of that variable. ex: A=10.\r\n",
    "\r\n",
    "Equal to operator is used to match the conditions or you can say to check whether both the values are same or not. ex: if A==10: print(A).\r\n",
    "\r\n",
    "This operator mostly used in conditional statements where assignment operator used to assign any values to a variable.\r\n",
    "\r\n",
    "7. Identify the three blocks in this code:\r\n",
    "spam = 0\r\n",
    "This is the first block\r\n",
    "if spam ==10:\r\n",
    "print(\"eggs\")\r\n",
    "\r\n",
    "this one is the second block\r\n",
    "if spam>5:\r\n",
    "print(\"bacon\")\r\n",
    "\r\n",
    "this is the third block\r\n",
    "else:\r\n",
    "\r\n",
    "print('ham')\r\n",
    "print('spam')\r\n",
    "print('spam')\r\n",
    "\r\n",
    "8. write code that prints Hello if 1 is stored in spam, prints Howdy if 2 is stored in spam, and prints Greetings! if anything else is stored in spam.\r\n",
    "\r\n",
    "Ans.\r\n",
    "spam = int(input())\r\n",
    "\r\n",
    "if spam == 1:\r\n",
    "    print(\"Hello\")\r\n",
    "if spam == 2:\r\n",
    "    print(\"Howdy\")\r\n",
    "    \r\n",
    "else:\r\n",
    "    print(\"Greetings!\")\r\n",
    "    \r\n",
    "9. if your program is stuck in an endless loop, what keys you'll press?\r\n",
    "\r\n",
    "Ans. Cntrl+z to pause the program\r\n",
    "     Cntrl+c to terminate the program.\r\n",
    "     \r\n",
    "10. How can you tell the difference between break and continue?\r\n",
    "\r\n",
    "Ans. Break: This statement is used to terminate the program after achieving a certain condition , where you want to use. it will not go to the next statement or next condition once it meets Break.\r\n",
    "\r\n",
    "Continue: This is opposite of break used to make the program continue no matter if the condition is failed or does not meet the requirement. it is used to check the other conditions even after getting initial condition failed.\r\n",
    "\r\n",
    "11. In a for loop, what is the difference between range(10), range(0,10), and range (0,10,1)?\r\n",
    "\r\n",
    "Ans. There is no significant difference with the above condition all will represent the same output but there is difference if we change the values, here is how we can do that:\r\n",
    "\r\n",
    "range(10):it will take as a limit up to 10 but will ignore/exclude the upper limit that is 10.\r\n",
    "\r\n",
    "range(0,10): it will take the lower limit 0 and starts from it and then go up to the upper limit but exclude that.\r\n",
    "\r\n",
    "range(0,10,1): it will take this the lower limit as 0 and upper limit as 10 and again it will exclude the upper limit, but here it will take steps of one; that is the by default.\r\n",
    "for example: if the starts if the steps are 2 then it will skip one number like, 0,2,4,6 and so on.\r\n",
    "\r\n",
    "12. write a program that prints the numbers 1 to 10 using a for loop. then write an equivalent program that prints the numbers 1 to 10 using a while loop.\r\n",
    "\r\n",
    "Ans. for i in rnage(1,11)\r\n",
    "     print(i)\r\n",
    "     this for loop print from 1 to 10.\r\n",
    "     \r\n",
    "     i=1\r\n",
    "     while (i<=10):\r\n",
    "     print (i)\r\n",
    "     i=i+1\r\n",
    "     \r\n",
    "13. if you had a function named bacon() inside a module named spam, how would you call it after importing spam?\r\n",
    "\r\n",
    "Ans. import spam \r\n",
    "     spam.bacon()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.17"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
